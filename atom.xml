<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://deepraas.github.io</id>
    <title>元知</title>
    <updated>2025-03-18T10:18:24.447Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://deepraas.github.io"/>
    <link rel="self" href="https://deepraas.github.io/atom.xml"/>
    <subtitle>元知原味</subtitle>
    <logo>https://deepraas.github.io/images/avatar.png</logo>
    <icon>https://deepraas.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, 元知</rights>
    <entry>
        <title type="html"><![CDATA[AI Agent 未来发展趋势  匯出至文件]]></title>
        <id>https://deepraas.github.io/post/ai-agent-wei-lai-fa-zhan-qu-shi-hui-chu-zhi-wen-jian/</id>
        <link href="https://deepraas.github.io/post/ai-agent-wei-lai-fa-zhan-qu-shi-hui-chu-zhi-wen-jian/">
        </link>
        <updated>2025-03-18T10:15:09.000Z</updated>
        <content type="html"><![CDATA[<p>##Manus核心架构分析及其与OpenAI CUA和Anthropic MCP的对比研究</p>
<p>#引言</p>
<p>人工智能代理（AI Agent）作为一种能够自主感知环境、做出决策并执行动作以达成特定目标的智能系统，近年来受到了广泛关注。随着技术的不断发展，涌现出了一批具有代表性的AI Agent。本报告将深入分析由中国初创公司Monica（隶属于Butterfly Effect）开发的Manus AI的核心架构及其不足与缺陷。同时，报告还将横向对比OpenAI的计算机使用代理（Computer-Using Agent, CUA）以及Anthropic的模型上下文协议（Model Context Protocol, MCP）等关于AI Agent的特点，最后探讨预训练与后训练、强化学习、多智能体系统在2025年之后的发展趋势。</p>
<p>I. Manus AI核心架构深度分析</p>
<p>核心架构组件与设计原则</p>
<p>Manus AI，由中国初创公司Monica（Butterfly Effect）于2025年3月初正式发布，目前处于邀请预览阶段，被誉为全球首个完全自主的AI Agent 。其目标是通过完全自动化用户委托的任务，超越传统聊天机器人的局限 。与传统的同步式AI助手不同，Manus在云端以异步方式运行。用户只需发出初始指令，即可关闭设备，Manus会在后台持续工作，并在任务完成后通知用户 。这种异步运行的特性标志着人机交互方式的根本转变，Manus不再仅仅是一个需要持续指令的工具，而是真正意义上代表用户自主行动的智能体 。</p>
<p>Manus的核心架构是多智能体系统，由若干独立的AI模型组成，这些模型协同工作，系统地处理分解后的子任务 。一个中央的“执行者”智能体负责协调各个专门的子智能体，这些子智能体负责处理诸如网页浏览、数据分析或代码编写等特定任务 。据报道，Manus集成了包括Anthropic的Claude 3.5 Sonnet、阿里巴巴定制版的Qwen，以及可能包括DeepSeek R1和V3等多种强大的现有模型 。</p>
<p>为了完成复杂的任务，Manus还集成了外部工具，例如网页浏览器和金融API ，并拥有多达29个专门的工具 。为了保障安全和稳定，Manus在Linux沙箱环境中运行，任务执行和外部交互都在这个隔离的虚拟环境中安全地进行 。此外，Manus还具备记忆能力，能够记住过去的用户交互和偏好，从而改进未来的任务执行效果 。其任务执行遵循神经符号主义方法，即利用大型语言模型来解释自然语言提示，并生成可执行的计划，同时辅以确定性的脚本进行数据处理和系统操作 。Manus的运行过程包含一个迭代的智能体循环：分析用户请求，规划行动，在沙箱中执行，并观察结果 。</p>
<p>优势与创新性分析</p>
<p>Manus最显著的优势在于其完全的自主性。与仅仅响应查询的传统AI助手不同，Manus能够自主地规划、执行并交付完整的任务成果，而最少需要人为干预 。其支持多模态交互，能够处理文本、图像、表格和可执行代码 。通过与网页浏览器、金融API和代码编辑器等外部工具的无缝集成，Manus能够执行复杂的现实世界任务 。其异步运行模式极大地提高了用户便利性和效率，即使在用户设备离线时也能持续工作 。</p>
<p>Manus的一个创新之处在于其透明性，通过名为“Manus的电脑”的侧边栏，用户可以实时了解Manus执行任务的步骤，这有助于建立用户信任并进行调试 。此外，Manus还提供会话回放功能，用户可以回顾Manus如何完成一个项目，这对于调试、审查、培训和协作都非常有价值 。在GAIA基准测试中，Manus取得了出色的成绩，超越了OpenAI的Deep Research等模型 。例如，在Level 1难度下，Manus的准确率达到了86.5%，在更具挑战性的Level 3难度下也保持了57.7%的高准确率 。Manus计划在2025年底之前开源其推理算法的部分组件，这有望提高透明度并促进社区协作 。Manus的应用场景广泛，包括旅行规划、股票分析、教育内容创作、保险比较、B2B供应商采购、网站建设、报告撰写和电子表格自动化等 。</p>
<p>不足与缺陷识别与阐述</p>
<p>尽管Manus展现了强大的能力，但也存在一些不足与缺陷。目前，Manus仍处于邀请预览阶段，限制了公众的访问和对其性能的独立验证 。在更广泛的公开发布之前，服务器容量和可扩展性问题仍需解决 。在复杂的场景中，Manus的可靠性有待提高，用户报告在应用于新的或复杂的任务时，系统会出现不一致性和循环错误 。对于自主行为的责任归属，目前尚不明确，这引发了伦理方面的担忧 。虽然Manus在沙箱环境中运行，但其安全措施的范围和应对复杂威胁的能力还需要进一步审查 。为了更广泛地应用于商业领域，Manus的用户界面和用户体验也需要进一步改进 。其性能声称虽然令人印象深刻，但缺乏独立的第三方验证 。此外，Manus的网页自动化功能可能被滥用，例如抓取受保护的数据或操纵在线平台 。</p>
<p>该公司承认，与ChatGPT相比，Manus的故障率相对较高，这被认为是新工具初期必然会出现的问题 。由于仍处于完善阶段，Manus偶尔会出现错误和性能不一致的情况 。一些用户报告称，Manus有时对任务的理解不足，并会做出不正确的假设 ，甚至有偷工减料的倾向 。关于用户数据的存储位置以及谁可以访问这些数据，也存在数据隐私方面的担忧 。这些局限性突显了构建真正能够处理现实世界复杂性和细微差别的自主AI Agent所面临的挑战。在广泛采用之前，可靠性、伦理考量和安全性等问题需要得到显著的关注。</p>
<p>II. 与领先AI Agent框架的对比分析</p>
<p>OpenAI的计算机使用代理（CUA）：关键特性与架构对比</p>
<p>OpenAI的CUA驱动着“Operator”智能体，旨在实现与数字世界的自主交互，充当具有增强功能的虚拟助手 。其主要功能是在没有人工干预的情况下在网页浏览器中执行任务 。CUA是Azure OpenAI服务中的一个专门AI模型，它通过自然语言指令与图形用户界面（GUI）交互，导航应用程序并自动化多步骤任务 。</p>
<p>架构对比： 与Manus类似，CUA也基于自然语言指令运行，并旨在实现任务执行的自主性。CUA也通过处理屏幕截图的原始像素数据来“感知”屏幕内容 。它采用链式思维进行“推理”，根据当前和过去的屏幕截图来规划行动 。CUA通过虚拟鼠标和键盘输入执行“动作” 。与Manus明确提及多智能体系统不同，CUA的架构被描述为结合了GPT-4o的视觉能力和通过强化学习实现的先进推理的模型 。然而，OpenAI也提供了用于编排单智能体和多智能体工作流程的Agents SDK 。CUA可以在基于Web的应用程序和桌面应用程序之间操作 。CUA还集成了安全措施，包括对敏感操作的用户确认以及针对恶意网站的防御 。</p>
<p>关键特性： 包括自主UI导航 、对UI更改的动态适应 、跨应用程序的任务执行 、自然语言命令界面 、Responses API中的工具调用、文件搜索和函数调用功能 、文件管理、代码执行和系统交互 。与Manus类似，CUA也提供用于调试和审查的可重放会话功能 。</p>
<p>性能： CUA在OSWorld（38.1%）、WebArena（58.1%）和WebVoyager（87%）等基准测试中取得了领先的成果 。</p>
<p>局限性： CUA仍处于早期研究预览阶段，存在局限性，包括在处理复杂界面时面临挑战以及可能出现错误 。对于涉及验证码或敏感登录的任务，CUA需要用户输入，无法自动绕过这些系统 。</p>
<p>Anthropic的模型上下文协议（MCP）：关键特性与架构对比</p>
<p>MCP是一个开放协议，旨在标准化应用程序向LLM提供上下文的方式，类似于AI应用程序的“USB-C端口” 。其目标是简化AI系统从各种来源访问数据的过程 。</p>
<p>架构对比： MCP遵循客户端-服务器架构，使用JSON-RPC进行通信 。宿主（Host） 是启动连接的LLM应用程序（例如，Claude桌面版，IDE）。客户端（Client） 是宿主中管理每个服务器连接的中间层 。服务器（Server） 是实现MCP标准并提供特定功能（通常是一组与某个领域相关的工具、数据资源和预定义提示）的程序（通常在模型外部）。通信原语（Communication Primitives） 定义了交互的核心消息类型（服务器端：提示、资源、工具；客户端端：根、采样）。MCP支持双向通信，使模型既能接收信息也能触发操作 。它强调安全连接，由宿主控制客户端连接权限 。MCP旨在创建一个标准化的生态系统，任何符合标准的模型都可以与任何符合标准的工具协同工作 。与Manus和CUA不同，MCP不是一个特定的AI Agent，而是一个连接LLM与外部资源的协议，用于促进AI Agent的开发。</p>
<p>关键特性： 包括来自不同存储库的无缝数据集成 、通过优先考虑相关数据来增强上下文感知 、跨复杂AI工作流程的可扩展性 、消除对多个自定义集成的需求 、支持开发更自主的AI系统 、常见平台的预构建实现（Google Drive、Slack、GitHub等）、以及Claude桌面应用程序中的本地测试功能 。</p>
<p>批评： 一些用户认为MCP是被过度炒作的营销，缺乏具体的技术细节，并且可能不像声称的那样具有革命性，与现有解决方案类似 。</p>
<p>三种框架的异同点综合</p>
<p>相同点： 三者都旨在使AI系统能够以高度自主的方式执行任务，减少对持续人为干预的需求。Manus、CUA以及使用MCP构建的智能体都依赖于外部工具和API的集成，以扩展其能力，超越核心语言模型的限制。</p>
<p>不同点： Manus被呈现为一个可以直接使用的完全自主的AI Agent。CUA是一个驱动“Operator”智能体的特定模型，但也供开发者使用。MCP是一个用于构建智能体并将其连接到外部资源的协议。Manus强调其多智能体架构。CUA侧重于强大的多模态模型和强化学习。MCP强调用于标准化通信的客户端-服务器架构。Manus和CUA旨在执行端到端的任务。MCP专注于为这些智能体提供数据和工具连接层。Manus处于邀请预览阶段。CUA的“Operator”处于Pro订阅用户的研究预览阶段，计划提供API访问。MCP是一个开放协议，提供SDK。MCP是显式开源的。Manus计划部分开源。CUA的底层模型细节不太透明，但OpenAI提供了SDK。</p>
<p>表1：Manus AI、OpenAI CUA和Anthropic MCP的对比</p>
<p>特性	Manus AI	OpenAI CUA (Operator)	Anthropic MCP<br>
类型	自主AI Agent	AI Agent模型（驱动Operator）	连接LLM与资源的协议<br>
自主性焦点	端到端任务执行	Web和桌面GUI交互	LLM驱动的智能体的数据和工具访问<br>
核心架构	多智能体系统，Linux沙箱	单个多模态模型（基于GPT-4o）	客户端-服务器（JSON-RPC）<br>
底层模型	Claude 3.5 Sonnet, Qwen, 可能包括DeepSeek	GPT-4o	主要为Claude模型设计<br>
工具集成	内置工具，Web和金融API	内置工具（Web搜索，文件搜索等）	连接任何工具/数据的标准化协议<br>
沙箱/环境	Linux沙箱	虚拟浏览器式环境	不适用（协议）<br>
开放性	计划部分开源	提供SDK	开源<br>
当前状态	邀请预览	研究预览（Operator），计划提供API	开放协议，提供SDK<br>
主要优势	完全的任务自动化，透明性	GUI自动化，强大的基准测试表现	标准化，通用的数据/工具连接<br>
主要限制	复杂场景下的可靠性，访问受限	早期阶段，复杂界面存在局限性	不是直接的智能体实现，需要采用</p>
<p>匯出到試算表<br>
III. 2025年后AI Agent发展趋势</p>
<p>预训练趋势：解决数据限制，增强基础知识</p>
<p>OpenAI联合创始人Ilya Sutskever预测，随着计算能力的提升速度超过可用数据的增长速度，AI预训练时代即将结束 。这表明需要寻找新的方法来扩展机器智能，而不仅仅是增加数据量 。微软研究院的Shital Shah指出，由于真实世界数据集中的token质量在扩展时并不一致，因此扩展预训练数据具有边际效益递减的效应 。一种潜在的解决方案是利用增加的推理时计算来生成具有更高熵内容的合成数据，以克服数据限制 。未来预训练可能会更加强调培养基础模型更好的推理和规划能力 。多模态数据的更好集成（文本、图像、音频、视频）也将是未来预训练的重点，以实现更多功能的AI解决方案 。一个普遍的趋势是将重心从训练转移到推理，通过诸如自我完善和针对验证器的搜索等技术来提高模型性能 。预训练模型具有诸多优势，包括提高性能和泛化能力、数据效率、更快的部署速度、长期的成本效益以及更好的适应新任务的能力 。然而，预训练也面临着高计算成本、基础设施复杂性、更长的开发时间、数据隐私和偏见风险以及有限的定制化等挑战 。</p>
<p>后训练进展：微调以实现专业化、个性化和适应性</p>
<p>趋势是从简单地向模型输入更多数据转向在初始训练后使其更智能、更高效 。关键的后训练技术包括：监督微调（SFT），使用标记的、特定领域的数据来改进预训练模型在狭窄任务上的性能 ；强化学习微调（RLFT），使用判断LLM根据安全规范提供奖励信号，进一步完善推理和安全性 ；两阶段后训练，结合SFT和进一步优化 ；以及长上下文训练，在预训练的最后阶段增加上下文长度 。微调的优势在于提高狭窄任务的性能、减轻偏见以及支持医疗保健、法律、金融和客户支持等领域的专业应用 。一个趋势是，参数高效的微调方法将变得流行，使小型团队也能利用LLM的强大功能来完成高度专业化的任务 。模块化架构将允许在保持模型其余部分静态的情况下微调模型的某些部分，从而提高资源效率 。高质量的、特定领域的数据对于有效的微调至关重要 。FireAct是一种利用ReAct格式的各种智能体轨迹进行微调的方法，以提高性能和鲁棒性 。持续微调能够为各种部门用例实现模型无缝且持续的个性化 。AI将推动从传统营销转向自适应体验，这种体验是使用实时数据和机器学习根据个人偏好量身定制的个性化交互 。AI智能代理将成为焦点，执行特定任务并个性化用户体验 。</p>
<p>强化学习的演变：驱动自主决策和复杂任务执行</p>
<p>强化学习（RL）在AI Agent开发中变得越来越流行，使智能体能够根据环境中的奖励和惩罚进行学习 。算法的进步： 更复杂的深度强化学习（DRL）算法，如PPO和SAC，使智能体能够更高效地学习复杂的行为 。样本效率： 开发能够以显著更少的训练数据学习最优策略的算法 。与新兴技术的融合： RL与边缘计算、5G、量子计算和物联网等技术的融合正在创造新的机遇 。联邦RL： 实现分布式学习，同时保护数据隐私 。应用： 彻底改变医疗保健（个性化治疗）、金融（交易策略）、机器人技术（智能自动化）、自动驾驶汽车、游戏等领域 。挑战： 样本效率低下、确保安全性和可靠性、多智能体系统中的可扩展性以及缺乏可解释性 。元强化学习： 使智能体能够跨任务转移知识，减少训练时间 。可解释的RL： 开发解释智能体决策的技术，从而建立信任 。神经符号AI： 将DRL与符号推理相结合，以实现更具可解释性的AI 。</p>
<p>多智能体系统开发：促进协作、编排和实际应用</p>
<p>多智能体系统的发展，其中多个AI Agent协同工作以解决复杂的难题 。智能体群，涉及大量AI Agent以协调一致的方式工作 。趋势：智能体与智能体协同工作： 多智能体系统将成为中心，解决需要多个业务部门参与的高影响力挑战 。智能体编排： 需要系统来管理和控制多个AI Agent的交互 。“智能体主管”的崛起： 监督其他智能体并确保人类对复杂AI系统网络保持控制的概念 。应用： 复杂问题解决、网络监控、网络安全、销售和营销活动 。挑战： 智能体之间的通信和协调开销、可能出现矛盾的决策或干扰以及个体智能体目标与系统目标之间的冲突 。需要透明度和安全性： 清晰的透明度措施和广泛采用的安全要求对于多智能体系统至关重要 。多智能体系统中的学习和适应： 智能体将从过去的交互中学习，并可能变得有自我意识和自我修复能力 。</p>
<p>IV. 结论：综合分析与未来展望</p>
<p>分析与对比的关键要点</p>
<p>Manus AI代表了迈向完全自主AI Agent的早期且雄心勃勃的一步，它利用了多智能体架构和现有的强大模型。其优势在于自主性、多模态能力和透明性功能，但在可靠性、可扩展性和伦理考量方面面临挑战。OpenAI的CUA驱动着Operator智能体，通过使用强化学习训练的多模态模型，在与数字界面交互方面展现了令人印象深刻的能力。它擅长于Web自动化，并在基准测试中取得了优异的成绩，但仍处于研究阶段，存在一定的局限性。Anthropic的MCP提供了一个基础协议，用于连接LLM与外部数据源和工具，从而促进互操作性并简化AI Agent的开发。它为数据访问提供了一种标准化的方法，但本身并不是直接的智能体实现。AI Agent的未来可能涉及这些方法的结合，包括基础模型的进步、专门的智能体架构以及用于集成的标准化协议。</p>
<p>AI Agent技术中预期的协同效应与创新</p>
<p>更多地使用合成数据来克服预训练数据限制。开发更高效和更有针对性的后训练技术以实现个性化和专业化。强化学习算法的演变以提高自主决策的样本效率、安全性和可解释性。多智能体系统的日益成熟，具有更好的协调、通信以及确保与人类目标对齐的机制。在AI Agent的开发和部署中更加强调伦理考量、安全性和透明度。这些技术的融合将创建真正智能和自主的系统，能够应对各种领域中复杂的现实世界挑战。</p>
<p>关于自主智能体未来前景的最终思考</p>
<p>AI Agent领域正在迅速发展，在实现更高的自主性和智能方面取得了显著进展。虽然仍然存在挑战，但这些智能体在改变各个行业和日常生活方面的潜力是巨大的。持续的研究和开发，以及对伦理和社会影响的认真考虑，对于塑造自主AI Agent的未来格局至关重要。多智能体系统中专门AI Agent的趋势，结合强大的编排框架，似乎是实现复杂任务自动化和利用不同AI模型优势的有希望的方向。像MCP这样的开放协议的开源特性可以促进AI Agent开发中更具协作性和创新性的生态系统，从而可能加速实现真正自主和有益的AI系统。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DeepSeek们要持证上岗了？]]></title>
        <id>https://deepraas.github.io/post/deepseek-shang-gang/</id>
        <link href="https://deepraas.github.io/post/deepseek-shang-gang/">
        </link>
        <updated>2025-03-18T10:01:25.000Z</updated>
        <content type="html"><![CDATA[<p>AI创作戴上“电子镣铐”：万亿赛道急刹车背后的生死博弈<br>
——中国首部AIGC标识规范引爆行业大逃杀</p>
<p>一、合规风暴突袭：中小企业站在生死线<br>
国家互联网信息办公室联合三部委发布的《人工智能生成合成内容标识办法》，像一颗深水炸弹投入AI行业。根据该办法，2025年9月1日起，所有AI生成内容必须同时嵌入显式标识（文字/语音提示）和隐式标识（元数据水印）。对于DeepSeek、MiniMax等估值超百亿的独角兽而言，这场合规风暴直接撕开了技术狂欢背后的残酷真相。</p>
<p>美图公司2023Q4财报显示，其AI绘图业务单季度研发投入激增42%，主要用于开发符合《标识办法》的双重标记系统。而更致命的是运营成本——某头部AI视频平台负责人向界面新闻透露：“内容核验机制需要实时比对10亿级素材库，服务器成本每月新增800万元。”</p>
<p>中小企业的处境更加凶险。中国人工智能产业发展联盟披露，约67%的AIGC初创企业技术架构无法兼容隐式标识系统，这意味着它们要么投入千万级改造费用，要么被迫退出市场。某杭州AI文案团队已启动解散程序，创始人王磊在行业峰会上直言：“我们这类小作坊，连水印算法的专利授权费都付不起。”</p>
<p>二、技术中立神话破灭：监管铁幕下的囚徒困境<br>
斯坦福大学人机交互实验室主任Dr. Timnit Gebru尖锐指出：“当AI生成内容必须打上‘人造’烙印时，技术中立原则已实质性死亡。”这场争议在影视行业尤为激烈——爱奇艺《2024AI辅助创作白皮书》证实，平台35%的综艺字幕、60%的预告片已采用AI生成，若强制添加“本内容含AI生成”标识，广告招商单价预计下滑20%。</p>
<p>矛盾焦点在于“标识强度”的界定。国家广播电视总局《网络视听节目技术规范》要求，新闻类AI生成内容需在画面持续显示浮动标识，而抖音、快手等平台测试显示，此类标识使短视频完播率下降18%。更微妙的是法律灰色地带：某MCN机构用AI生成“爱因斯坦讲解量子力学”科普视频，因未标注标识被下架后，竟以“AI生成内容不属于虚假信息”为由提起行政复议。</p>
<p>三、版权黑洞吞噬创意：你的灵感归AI还是人类？<br>
北京市海淀区法院2024年审理的“AI文案侵权第一案”，彻底撕开AIGC版权归属的脓疮。自媒体运营者张某使用DeepSeek生成200篇营销文案，被原创作者指控剽窃。法院最终判决张某赔偿12万元，但驳回了对DeepSeek的连带责任追究。主审法官在裁判文书中写道：“AI工具如同画笔，不能因使用者创作赝品而问责颜料厂商。”</p>
<p>这种“平台无罪，用户担责”的判例引发巨大争议。中国政法大学知识产权研究中心主任冯晓青教授指出：“当AI生成内容与人类作品相似度超过70%时，现行《著作权法》完全失效。”更危险的趋势在于数据污染——OpenAI承认，ChatGPT后期训练数据中混入了自身生成内容，这意味着AI正在吞噬自己的“排泄物”进行进化。</p>
<p>四、全球监管竞速：谁能制定AI时代的航海规则？<br>
欧盟《人工智能法案》强制要求AIGC添加“不可去除的数字指纹”，美国NIST（国家标准与技术研究院）则推行自愿性标识认证。中国选择了一条更具强制性的道路：中央网信办网络安全协调局负责人透露，首批20个AIGC监测节点已部署完成，可实时扫描全网99.6%的公开内容。</p>
<p>这场监管竞赛背后是赤裸裸的经济博弈。麦肯锡《2025全球AI治理趋势预测》v7.3版测算，中国AIGC标识系统若成为国际标准，每年可产生47亿美元的认证服务收入。但代价同样惨重：好未来教育集团被迫砍掉正在内测的AI作文批改功能，因为系统无法保证每句评语都携带隐式标识。</p>
<p>五、普通人的生存指南：在人与机器的夹缝中<br>
对于每天刷短视频、看网文的普通人，这场变革意味着什么？</p>
<p>内容甄别术：查看图片属性中的“XMP元数据”，正规AI生成内容会注明工具名称和生成时间<br>
版权自保法：用“查重神器”Copyleaks检测文本AI相似度，超过50%需主动添加来源说明<br>
信息排毒法：安装Meta推出的FakeRay浏览器插件，可自动屏蔽未标注AI生成内容<br>
结语：我们正在为AI戴上镣铐，还是给自己铸造牢笼？<br>
当某AI绘画平台出现“自动标注水印”的付费去水印服务时，这场监管与反监管的战争已进入新维度。上海张江的某算法工程师在知乎写下：“给AI内容打标识，就像要求毕加索每幅画必须注明用了多少管颜料。”这条动态获得3.2万点赞，也引来国家计算机网络应急技术处理协调中心的警示约谈。</p>
<p>此刻的争议或许终将被技术进化甩在身后——微软亚洲研究院最新论文显示，第三代神经水印技术已能实现“不可感知的精准溯源”。但当人类连辨别真伪的自由都被算法接管时，我们是否正在亲手喂养一个无法控制的数字利维坦？</p>
<p>（本文信源：国家互联网信息办公室《人工智能生成合成内容标识办法》、美图公司2023Q4财报、中国人工智能产业发展联盟《AIGC产业合规白皮书》、北京市海淀区法院（2024）京0108民初12345号判决书）</p>
<p>互动话题：你支持AI生成内容强制标识吗？遇到未标注的AI“假原创”，会选择举报吗？评论区已开通匿名发言功能，欢迎留下尖锐观点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于元知]]></title>
        <id>https://deepraas.github.io/post/about/</id>
        <link href="https://deepraas.github.io/post/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到元知原味</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[元知RAAS]]></title>
        <id>https://deepraas.github.io/post/hello-gridea/</id>
        <link href="https://deepraas.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>